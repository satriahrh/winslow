// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"github.com/satriahrh/winslow/ent/project"

	"github.com/facebookincubator/ent/dialect/sql/schema"
	"github.com/facebookincubator/ent/schema/field"
)

var (
	// ActivitiesColumns holds the columns for the "activities" table.
	ActivitiesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "activity", Type: field.TypeString},
		{Name: "logged_at", Type: field.TypeTime},
	}
	// ActivitiesTable holds the schema information for the "activities" table.
	ActivitiesTable = &schema.Table{
		Name:        "activities",
		Columns:     ActivitiesColumns,
		PrimaryKey:  []*schema.Column{ActivitiesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// ProjectsColumns holds the columns for the "projects" table.
	ProjectsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "slug", Type: field.TypeString, Unique: true},
		{Name: "current", Type: field.TypeBool, Default: project.DefaultCurrent},
	}
	// ProjectsTable holds the schema information for the "projects" table.
	ProjectsTable = &schema.Table{
		Name:        "projects",
		Columns:     ProjectsColumns,
		PrimaryKey:  []*schema.Column{ProjectsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// SprintsColumns holds the columns for the "sprints" table.
	SprintsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "counter", Type: field.TypeUint},
		{Name: "sprint_goal", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "state", Type: field.TypeEnum, Enums: []string{"created", "started", "finished"}},
		{Name: "started_at", Type: field.TypeTime, Nullable: true},
		{Name: "finished_at", Type: field.TypeTime, Nullable: true},
	}
	// SprintsTable holds the schema information for the "sprints" table.
	SprintsTable = &schema.Table{
		Name:        "sprints",
		Columns:     SprintsColumns,
		PrimaryKey:  []*schema.Column{SprintsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// StoriesColumns holds the columns for the "stories" table.
	StoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "slug", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString},
		{Name: "state", Type: field.TypeEnum, Enums: []string{"created", "parked", "todo", "on_progress", "on_review", "done"}},
	}
	// StoriesTable holds the schema information for the "stories" table.
	StoriesTable = &schema.Table{
		Name:        "stories",
		Columns:     StoriesColumns,
		PrimaryKey:  []*schema.Column{StoriesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// ProjectSprintsColumns holds the columns for the "project_sprints" table.
	ProjectSprintsColumns = []*schema.Column{
		{Name: "project_id", Type: field.TypeInt},
		{Name: "sprint_id", Type: field.TypeInt},
	}
	// ProjectSprintsTable holds the schema information for the "project_sprints" table.
	ProjectSprintsTable = &schema.Table{
		Name:       "project_sprints",
		Columns:    ProjectSprintsColumns,
		PrimaryKey: []*schema.Column{ProjectSprintsColumns[0], ProjectSprintsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "project_sprints_project_id",
				Columns: []*schema.Column{ProjectSprintsColumns[0]},

				RefColumns: []*schema.Column{ProjectsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:  "project_sprints_sprint_id",
				Columns: []*schema.Column{ProjectSprintsColumns[1]},

				RefColumns: []*schema.Column{SprintsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// ProjectStoriesColumns holds the columns for the "project_stories" table.
	ProjectStoriesColumns = []*schema.Column{
		{Name: "project_id", Type: field.TypeInt},
		{Name: "story_id", Type: field.TypeInt},
	}
	// ProjectStoriesTable holds the schema information for the "project_stories" table.
	ProjectStoriesTable = &schema.Table{
		Name:       "project_stories",
		Columns:    ProjectStoriesColumns,
		PrimaryKey: []*schema.Column{ProjectStoriesColumns[0], ProjectStoriesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "project_stories_project_id",
				Columns: []*schema.Column{ProjectStoriesColumns[0]},

				RefColumns: []*schema.Column{ProjectsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:  "project_stories_story_id",
				Columns: []*schema.Column{ProjectStoriesColumns[1]},

				RefColumns: []*schema.Column{StoriesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// SprintStoriesColumns holds the columns for the "sprint_stories" table.
	SprintStoriesColumns = []*schema.Column{
		{Name: "sprint_id", Type: field.TypeInt},
		{Name: "story_id", Type: field.TypeInt},
	}
	// SprintStoriesTable holds the schema information for the "sprint_stories" table.
	SprintStoriesTable = &schema.Table{
		Name:       "sprint_stories",
		Columns:    SprintStoriesColumns,
		PrimaryKey: []*schema.Column{SprintStoriesColumns[0], SprintStoriesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "sprint_stories_sprint_id",
				Columns: []*schema.Column{SprintStoriesColumns[0]},

				RefColumns: []*schema.Column{SprintsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:  "sprint_stories_story_id",
				Columns: []*schema.Column{SprintStoriesColumns[1]},

				RefColumns: []*schema.Column{StoriesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// StoryActivitiesColumns holds the columns for the "story_activities" table.
	StoryActivitiesColumns = []*schema.Column{
		{Name: "story_id", Type: field.TypeInt},
		{Name: "activity_id", Type: field.TypeInt},
	}
	// StoryActivitiesTable holds the schema information for the "story_activities" table.
	StoryActivitiesTable = &schema.Table{
		Name:       "story_activities",
		Columns:    StoryActivitiesColumns,
		PrimaryKey: []*schema.Column{StoryActivitiesColumns[0], StoryActivitiesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "story_activities_story_id",
				Columns: []*schema.Column{StoryActivitiesColumns[0]},

				RefColumns: []*schema.Column{StoriesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:  "story_activities_activity_id",
				Columns: []*schema.Column{StoryActivitiesColumns[1]},

				RefColumns: []*schema.Column{ActivitiesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ActivitiesTable,
		ProjectsTable,
		SprintsTable,
		StoriesTable,
		ProjectSprintsTable,
		ProjectStoriesTable,
		SprintStoriesTable,
		StoryActivitiesTable,
	}
)

func init() {
	ProjectSprintsTable.ForeignKeys[0].RefTable = ProjectsTable
	ProjectSprintsTable.ForeignKeys[1].RefTable = SprintsTable
	ProjectStoriesTable.ForeignKeys[0].RefTable = ProjectsTable
	ProjectStoriesTable.ForeignKeys[1].RefTable = StoriesTable
	SprintStoriesTable.ForeignKeys[0].RefTable = SprintsTable
	SprintStoriesTable.ForeignKeys[1].RefTable = StoriesTable
	StoryActivitiesTable.ForeignKeys[0].RefTable = StoriesTable
	StoryActivitiesTable.ForeignKeys[1].RefTable = ActivitiesTable
}
